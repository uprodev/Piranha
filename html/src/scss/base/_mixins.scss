@mixin placeholder($color: $placeholder-color, $opacity: 1) {
  &::-webkit-input-placeholder {
    color: $color;
    opacity: $opacity;
  }
  &:-moz-placeholder {
    color: $color;
    opacity: $opacity;
  }
  &::-moz-placeholder {
    color: $color;
    opacity: $opacity;
  }
  &:-ms-input-placeholder {
    color: $color;
    opacity: $opacity;
  }
}

@mixin abs {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}
@mixin abs-center {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate3d(-50%, -50%, 0);
}

@mixin img-fit {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

@mixin img-abs-container($p) {
  display: block;
  position: relative;
  padding-top: $p;

  img,
  video,
  iframe {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }
}

@mixin hl($c1: transparent, $c2: transparent) {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

  &::selection {
    background-color: $c1;
    color: $c2;
  }
  &::-moz-selection {
    background-color: $c1;
    color: $c2;
  }
}

@function max($numbers...) {
  @return m#{a}x(#{$numbers});
}

@function min($numbers...) {
  @return m#{i}n(#{$numbers});
}

@mixin staggered_transitions($nth: 1, $items: 2, $initial: 0, $step: 0.1) {
  @for $i from $nth through $items {
    &:nth-child(#{$i}) {
      transition-delay: #{$initial}s;
    }
    $initial: $initial + $step;
  }
}
